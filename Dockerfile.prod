# Use an Alpine-based PHP runtime as a parent image
FROM php:8.2-fpm-alpine

# Install system dependencies, SQLite extension, Composer, Node.js, and required PHP extensions
RUN apk update && apk add --no-cache \
    sqlite-dev \
    unzip \
    git \
    curl \
    nginx \
    bash \
    nodejs \
    npm \
    libzip-dev \
    icu-dev \
    && docker-php-ext-install pdo_sqlite zip intl \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Set working directory to /var/www
WORKDIR /var/www

# Copy project files into the container
COPY . .

# Install PHP dependencies
RUN composer install \
    --no-interaction \
    --prefer-dist \
    --optimize-autoloader \
    --no-dev \
    --no-cache

# Install Node.js dependencies and build assets
RUN npm ci && npm run build

# Clean up unnecessary files
RUN rm -rf /var/cache/apk/* /tmp/*

# Configure Nginx and expose ports (as needed)
COPY ./nginx/laravel.conf /etc/nginx/sites-available/default
EXPOSE 8080

# Set permissions for Laravel storage and cache directories
RUN chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache

# Start the server
CMD ["bash", "-c", "if [ ! -f /var/www/database/database.sqlite ]; then touch /var/www/database/database.sqlite; fi && php artisan migrate --force && php artisan db:seed --force && php artisan serve --host=0.0.0.0 --port=8080"]